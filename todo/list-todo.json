{
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d5c4504-db56-4c3b-8ccb-00045ff453f8",
              "name": "markdownTable",
              "value": "={{ $json.markdownTable }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -760,
        0
      ],
      "id": "b91da985-f61b-4312-b12d-3f766599969c",
      "name": "Set Values1"
    },
    {
      "parameters": {
        "jsCode": "// Access incoming data\nconst data = items.map(item => item.json);\n\n// Define the table columns\nconst headers = [\"id\", \"user_name\", \"text\", \"assignee\", \"done\", \"priority\"];\n\n// Create the header row for Markdown\nlet markdownTable = `| ${headers.join(\" | \")} |\\n`;\nmarkdownTable += `|${headers.map(() => \":---\").join(\"|\")}|\\n`;\n\n// Loop through the array and create rows for the table\ndata.forEach(row => {\n  const tableRow = headers.map(header => row[header] || \"\").join(\" | \");\n  markdownTable += `| ${tableRow} |\\n`;\n});\n\n// Return the Markdown table as output\nreturn [{\n  json: {\n    markdownTable\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -940,
        0
      ],
      "id": "c5636d9f-536e-4bda-89b1-49dc3b4a8e07",
      "name": "Convert to md table",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "透過 body parameter 的方式，避免使用 json \\n 會直接被 evaluate 導致回傳後 json 格式出錯\n",
        "height": 280,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        120
      ],
      "id": "0acb814b-c20f-4cb7-a00f-82cb4592aee8",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "collection": "todo",
        "options": {},
        "query": "={\"$and\":[{\"channel_id\": \"{{$('Webhook').item.json.body.channel_id}}\"},{\"done\":\":x:\"}]}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        -1200,
        -80
      ],
      "id": "b78797aa-1623-4790-86bd-f61ecb7550a1",
      "name": "Find Undone Todo",
      "credentials": {
        "mongoDb": {
          "id": "n2QrVu9KS1tKt3TQ",
          "name": "BizForm Dev"
        }
      }
    },
    {
      "parameters": {
        "collection": "todo",
        "options": {},
        "query": "={\"channel_id\": \"{{ $('Webhook').item.json.body.channel_id }}\"}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        -1200,
        80
      ],
      "id": "24e9ca34-395c-4d36-997e-4dfa49753baf",
      "name": "Find All Todo",
      "credentials": {
        "mongoDb": {
          "id": "n2QrVu9KS1tKt3TQ",
          "name": "BizForm Dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fac1d067-0739-409f-a012-97353e7a9dd1",
              "leftValue": "={{ $json.body.text }}",
              "rightValue": "all",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1580,
        60
      ],
      "id": "b9b09da9-14c1-4932-b7eb-ef55b43032a4",
      "name": "If Not List All"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').first().json.body.response_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.markdownTable }}"
            },
            {
              "name": "response_type",
              "value": "in_channel"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -260,
        240
      ],
      "id": "2edf6832-ecf4-4f5b-93cf-50023bbc806a",
      "name": "Response to Channel"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2300,
        -40
      ],
      "id": "fc4b334f-986b-424f-87b1-6fedacc73df8",
      "name": "Webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "919e326c-5db1-4f89-9e8b-e10af051e807",
              "leftValue": "={{ $json.from_remind }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1800,
        -40
      ],
      "id": "3c679c47-3a55-4c1d-9617-fd47c0ac9ace",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "96a4bc1a-f3ea-4f0d-9840-59cf6c49cb53",
              "name": "channel_id",
              "value": "={{ $json.body.channel_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2020,
        -40
      ],
      "id": "aba8097d-e061-448a-bc80-0aec68791a25",
      "name": "Set Variable1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3dea5247-0932-432e-93f8-c0eef19629fa",
              "leftValue": "={{ $('Webhook').first().json.body.text }}",
              "rightValue": "--silent",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -540,
        0
      ],
      "id": "e9efee54-040d-426e-b137-53d4223b2fae",
      "name": "Is Silent"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://chat.gss.tw/api/v4/channels/direct",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer"
            },
            {}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=[\n  \"y4dk4y9x1bbu8f7bkfpenmexow\",\n\"{{ $('Webhook').first().json.body.user_id }}\"\n]",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -320,
        -80
      ],
      "id": "6e57f0c0-4d6e-4c17-9d4a-05fa77855687",
      "name": "Create Direct Channel"
    },
    {
      "parameters": {
        "channelId": "={{ $json.id }}",
        "message": "={{ $('Convert to md table').item.json.markdownTable }}",
        "attachments": [],
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.mattermost",
      "typeVersion": 1,
      "position": [
        -20,
        -80
      ],
      "id": "c465852e-7949-4f2e-8a87-2ffdcfdd1757",
      "name": "Mattermost",
      "credentials": {
        "mattermostApi": {
          "id": "QSV4fNtIj04Jhody",
          "name": "Mattermost account 2"
        }
      }
    }
  ],
  "connections": {
    "Set Values1": {
      "main": [
        [
          {
            "node": "Is Silent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to md table": {
      "main": [
        [
          {
            "node": "Set Values1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Undone Todo": {
      "main": [
        [
          {
            "node": "Convert to md table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find All Todo": {
      "main": [
        [
          {
            "node": "Convert to md table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not List All": {
      "main": [
        [
          {
            "node": "Find Undone Todo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Find All Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Variable1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Find Undone Todo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not List All",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variable1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Silent": {
      "main": [
        [
          {
            "node": "Create Direct Channel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response to Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Direct Channel": {
      "main": [
        [
          {
            "node": "Mattermost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e6829468b8f56d858129133d295d8fa9bedbd82172869cf86fc48c8e6e82b330"
  }
}