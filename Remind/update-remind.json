{
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        -20
      ],
      "id": "3d8e2439-f819-41a2-b15e-8d4029face7a",
      "name": "Webhook"
    },
    {
      "parameters": {
        "collection": "remind",
        "options": {},
        "query": "={\"$and\":[{\"channel_id\": \"{{$('Webhook').item.json.body.channel_id}}\"},{\"id\":{{ $json.id }}}]}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        660,
        -20
      ],
      "id": "443bbdb7-95b3-4746-a273-87bcc19b9cc0",
      "name": "MongoDB",
      "alwaysOutputData": true,
      "credentials": {
        "mongoDb": {
          "id": "n2QrVu9KS1tKt3TQ",
          "name": "BizForm Dev"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2d3f0e9f-91b7-422a-b5ba-6356153af4ee",
              "name": "when",
              "value": "={{ $json.when }}",
              "type": "string"
            },
            {
              "id": "3de2f242-9fe1-4120-811e-f35ceb2738a4",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        -20
      ],
      "id": "d60044ad-0a2b-4737-8008-fb8556b1e48b",
      "name": "Set Variables"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3bfc31d0-0aef-40d1-8f21-18e9f2dd6bcd",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        -20
      ],
      "id": "831525e1-90d2-4e6f-ad2d-e7a09af2cb7f",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.response_url }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "❌ Todo not found in your to-do list."
            },
            {
              "name": "response_type",
              "value": "in_channel"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        -120
      ],
      "id": "e0670f16-3ae5-4d29-a45c-adda8a495553",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ba5e8183-53b1-4cc5-9146-070739566173",
              "name": "_id",
              "value": "={{ $('Set Id & Replace \"').first().json._id.replace(/\\\"/g, \"\") }}",
              "type": "string"
            },
            {
              "id": "9d2669ff-ddff-405c-84a2-77e63bb884ae",
              "name": "when",
              "value": "={{ $('Set Variables').item.json.when }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1300,
        80
      ],
      "id": "e7de763a-16de-4e0d-bf26-6d371f779163",
      "name": "Set Insert Data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.response_url }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=⏰ Remind updated successfully!"
            },
            {
              "name": "response_type",
              "value": "in_channel"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2040,
        240
      ],
      "id": "289ee5a5-5a4c-418c-aaab-09d2e977808f",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9739ca52-42f0-4775-b251-c0db1058b0d4",
              "name": "_id",
              "value": "={{ $('MongoDB').first().json._id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        80
      ],
      "id": "0e5e2fbc-4356-4bf4-93bd-9081be635ce6",
      "name": "Set Id & Replace \""
    },
    {
      "parameters": {
        "operation": "findOneAndUpdate",
        "collection": "remind",
        "updateKey": "_id",
        "fields": "when",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        1500,
        80
      ],
      "id": "f8625105-7f41-4441-a26d-64d49b6773e1",
      "name": "MongoDB1",
      "credentials": {
        "mongoDb": {
          "id": "n2QrVu9KS1tKt3TQ",
          "name": "BizForm Dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3dea5247-0932-432e-93f8-c0eef19629fa",
              "leftValue": "={{ $('Webhook').first().json.body.text }}",
              "rightValue": "--silent",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        80
      ],
      "id": "8d680a6f-b6cb-4d38-bc25-0e85fc78e5f7",
      "name": "Is Silent"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://chat.gss.tw/api/v4/channels/direct",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": ""
            },
            {}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=[\n  \"y4dk4y9x1bbu8f7bkfpenmexow\",\n\"{{ $('Webhook').first().json.body.user_id }}\"\n]",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        -20
      ],
      "id": "75334ed0-4b69-4fa5-b133-fc3891e4975c",
      "name": "Create Direct Channel"
    },
    {
      "parameters": {
        "channelId": "={{ $json.id }}",
        "message": "=⏰ Remind updated successfully!",
        "attachments": [],
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.mattermost",
      "typeVersion": 1,
      "position": [
        2260,
        -20
      ],
      "id": "eed28665-dbde-4135-9a96-c35c0e78f7a2",
      "name": "Mattermost",
      "credentials": {
        "mattermostApi": {
          "id": "QSV4fNtIj04Jhody",
          "name": "Mattermost account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.body.text;\n\n// Use a single regex to capture key-value pairs for both long (--key=value) and short (-k=value) options\nconst regex = /-([a-zA-Z0-9_]+)=\"([^\"]*)\"/gu;\n\nlet matches;\nlet when = null;\nlet id = null;\n\n// Loop through the matches\nwhile ((matches = regex.exec(input)) !== null) {\n    const key = matches[1] || matches[3]; // Get long option name or short key\n    var value = matches[2] || matches[4]; // Get the associated value\n    value = value.trimEnd()\n    // Assign to the appropriate variable based on the key\n    if (key === 'when' || key === 'w') {\n        when = value;\n    } else if (key === 'i' || key === 'id') {\n        id = value;\n    }\n\n}\n\n// Return the results\nreturn { when, id };"
      },
      "id": "bb0cba61-c60b-4f30-9a9f-adb0d86e3887",
      "name": "Todo Update Arg Converter",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        -20
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Todo Update Arg Converter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variables": {
      "main": [
        [
          {
            "node": "MongoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Id & Replace \"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Insert Data": {
      "main": [
        [
          {
            "node": "MongoDB1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Id & Replace \"": {
      "main": [
        [
          {
            "node": "Set Insert Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB1": {
      "main": [
        [
          {
            "node": "Is Silent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Silent": {
      "main": [
        [
          {
            "node": "Create Direct Channel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Direct Channel": {
      "main": [
        [
          {
            "node": "Mattermost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Todo Update Arg Converter": {
      "main": [
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "e6829468b8f56d858129133d295d8fa9bedbd82172869cf86fc48c8e6e82b330"
  }
}